name: HighFive_CI

on:
  push:
    branches:
      - ci_test
      - release/**
  pull_request:
    branches:
      - master
      - release/**
    paths-ignore:
      - '**.md'
      - '**.rst'
      - 'doc/**'

env:
  HOMEBREW_NO_AUTO_UPDATE: 1  # for reproducibility, dont autoupdate
  BUILD_TYPE: RelWithDebInfo
  INSTALL_DIR: install

jobs:
  CI:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-latest]
        compilers_eval: ["", "CC=clang-8 CXX=clang++-8"]
        include:
          - os: macos-10.15
          - os: ubuntu-16.04
          - os: ubuntu-18.04
            compilers_eval: "CC=gcc-8 CXX=g++-8"
          - os: ubuntu-20.04
            compilers_eval: "CC=gcc-10 CXX=g++-10"
          - os: ubuntu-20.04
            compilers_eval: "CC=clang-10 CXX=clang++-10"

    steps:
    - uses: actions/checkout@v2

    - name: "Install libraries (OSX)"
      if: startsWith(matrix.os, 'macos')
      run: brew install boost hdf5 eigen

    - name: "Install libraries (Linux)"
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get update && sudo apt-get install libboost-all-dev libhdf5-dev libeigen3-dev

    - name: Prepare Build Environment
      run: |
        eval export ${{matrix.compilers_eval}}
        CC=${CC:-"gcc"}
        $CC --version || $CC -v || echo $CC
        cmake --version
        cmake -E make_directory $GITHUB_WORKSPACE/build
        cd $GITHUB_WORKSPACE/build
        cmake $GITHUB_WORKSPACE \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
          -DHIGHFIVE_USE_EIGEN:BOOL=TRUE

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --parallel 2 --verbose

    - name: Test
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: ctest --output-on-failure -C $BUILD_TYPE
