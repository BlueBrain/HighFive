# Link against target system libs
# -------------------------------

if(NOT TARGET highfive_deps)
  add_library(highfive_deps INTERFACE)
endif()

# locally keep track of target properties
set(HF_COMPILE_DEFINITIONS "")
set(HF_COMPILE_OPTIONS "")
set(HF_INCLUDE_DIRECTORIES "")
set(HF_LINK_LIBRARIES "")
set(HF_LINK_OPTIONS "")
set(HF_SYSTEM_INCLUDE_DIRECTORIES "")

# HDF5
if(NOT DEFINED HDF5_C_LIBRARIES)
  set(HDF5_NO_FIND_PACKAGE_CONFIG_FILE TRUE)  # Consistency
  set(HDF5_PREFER_PARALLEL ${HIGHFIVE_PARALLEL_HDF5})
  find_package(HDF5 REQUIRED)
endif()

if(HIGHFIVE_PARALLEL_HDF5 AND NOT HDF5_IS_PARALLEL)
  message(WARNING "Parallel HDF5 requested but libhdf5 doesn't support it")
endif()

string(REPLACE "-D" "" HIGHFIVE_TMP ${HDF5_DEFINITIONS})
set(HF_SYSTEM_INCLUDE_DIRECTORIES ${HF_SYSTEM_INCLUDE_DIRECTORIES} ${HDF5_INCLUDE_DIRS})
set(HF_LINK_LIBRARIES ${HF_LINK_LIBRARIES} ${HDF5_C_LIBRARIES})
set(HF_COMPILE_DEFINITIONS ${HF_COMPILE_DEFINITIONS} ${HIGHFIVE_TMP})

# Boost
if(HIGHFIVE_USE_BOOST)
  set(Boost_NO_BOOST_CMAKE TRUE)  # Consistency
  find_package(Boost REQUIRED COMPONENTS system serialization)
  # Don't use imported targets yet, not available before CMake 3.5
  set(HF_SYSTEM_INCLUDE_DIRECTORIES ${HF_SYSTEM_INCLUDE_DIRECTORIES} ${Boost_INCLUDE_DIR})
  set(HF_COMPILE_DEFINITIONS ${HF_COMPILE_DEFINITIONS} BOOST_ALL_NO_LIB H5_USE_BOOST)
endif()

# MPI
if(HIGHFIVE_PARALLEL_HDF5 OR HDF5_IS_PARALLEL)
  find_package(MPI REQUIRED)
  set(HF_SYSTEM_INCLUDE_DIRECTORIES ${HF_SYSTEM_INCLUDE_DIRECTORIES} ${MPI_CXX_INCLUDE_PATH})
  set(HF_LINK_LIBRARIES ${HF_LINK_LIBRARIES} ${MPI_CXX_LIBRARIES})
  if(CMAKE_VERSION VERSION_LESS 3.13)
    set(HF_LINK_LIBRARIES ${HF_LINK_LIBRARIES} ${MPI_CXX_LINK_FLAGS})
  else()
    set(HF_LINK_OPTIONS ${HF_LINK_OPTIONS} "SHELL:${MPI_CXX_LINK_FLAGS}")
  endif()
endif()

set_property(TARGET highfive_deps PROPERTY INTERFACE_COMPILE_DEFINITIONS ${HF_COMPILE_DEFINITIONS})
set_property(TARGET highfive_deps PROPERTY INTERFACE_COMPILE_OPTIONS ${HF_COMPILE_OPTIONS})
set_property(TARGET highfive_deps PROPERTY INTERFACE_INCLUDE_DIRECTORIES "")
set_property(TARGET highfive_deps PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${HF_INCLUDE_DIRECTORIES})
set_property(TARGET highfive_deps PROPERTY INTERFACE_LINK_LIBRARIES ${HF_LINK_LIBRARIES})
set_property(TARGET highfive_deps PROPERTY INTERFACE_LINK_OPTIONS ${HF_LINK_OPTIONS})
set_property(TARGET highfive_deps PROPERTY INTERFACE_SYSTEM_INCLUDE_DIRECTORIES ${HF_SYSTEM_INCLUDE_DIRECTORIES})

# Propagate to HighFive
target_link_libraries(HighFive INTERFACE highfive_deps)
target_compile_definitions(HighFive INTERFACE MPI_NO_CPPBIND)  # No c++ bindings

# Ensure we activate at least C++11
if(NOT DEFINED CMAKE_CXX_STANDARD)
  if(CMAKE_VERSION VERSION_LESS "3.1")
    message(WARNING "HighFive requires at least c++11. You may need to set CMAKE_CXX_STANDARD.")
  else()
    target_compile_features(HighFive INTERFACE cxx_std_11)
  endif()
endif()
